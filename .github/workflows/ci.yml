name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
      - v*.*
      - v*.*.*
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize]
  merge_group:
    types:
      - checks_requested

permissions:
  actions: write
  checks: write
  contents: read
  pull-requests: read

env:
  NEXT_TELEMETRY_DISABLED: true
  TURBO_TELEMETRY_DISABLED: true
  SHELLCHECKJS_LOGGER_LEVEL: warn
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install and build dependencies
        run: |
          pnpm install --frozen-lockfile --strict-peer-dependencies
          pnpm build --filter @repo/*
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Run commitlint on push
        if: github.event_name == 'push' && !github.event.forced
        run: commitlint --from ${{ github.event.before }} --to ${{ github.event.after }} --verbose
      - name: Run commitlint on forced push
        if: github.event.forced
        run: commitlint --last --verbose
      - name: Run commitlint on pull request
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        run: commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
      - name: Run code checks
        run: pnpm check
      - name: Trigger production deployment
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: gh workflow run deploy.yml
        env:
          GH_TOKEN: ${{ github.token }}
