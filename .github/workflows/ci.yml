name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
      - v*.*
      - v*.*.*
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
  merge_group:
    types:
      - checks_requested

env:
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TELEMETRY_DISABLED: true
  NEXT_TELEMETRY_DISABLED: true
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}

jobs:
  code-checks:
    name: Code checks
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    permissions:
      actions: write
      checks: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install and build dependencies
        run: |
          pnpm install --frozen-lockfile --strict-peer-dependencies
          pnpm build --filter @repo/*
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Run commitlint on push
        if: github.event_name == 'push' && !github.event.forced
        run: commitlint --from ${{ github.event.before }} --to ${{ github.event.after }} --verbose
      - name: Run commitlint on forced push
        if: github.event.forced
        run: commitlint --last --verbose
      - name: Run commitlint on pull request
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        run: commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
      - name: Run code checks
        run: pnpm check

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: code-checks
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - run: pnpm release
        env:
          GITHUB_TOKEN: ${{ github.token }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      contents: read
    environment:
      name: Production
      url: ${{ steps.vercel.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install and build dependencies
        run: |
          pnpm install --frozen-lockfile --strict-peer-dependencies
          pnpm build --filter @repo/*
          echo ./node_modules/.bin >> $GITHUB_PATH
      - name: Deploy to Vercel
        id: vercel
        run: |
          vercel pull --yes --prod --token ${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "deployment-url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
